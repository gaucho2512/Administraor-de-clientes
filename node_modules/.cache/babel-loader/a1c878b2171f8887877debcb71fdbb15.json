{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Juan/Desktop/Administraor-de-clientes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Juan\\\\Desktop\\\\Administraor-de-clientes\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React from'react';import{Formik,Form,Field}from'formik';import{useNavigate}from'react-router-dom';import*as Yup from'yup';import Alerta from'./Alerta';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Formulario=function Formulario(_ref){var _cliente$nombre,_cliente$empresa,_cliente$email,_cliente$telefono,_cliente$notas;var cliente=_ref.cliente,cargando=_ref.cargando;var navigate=useNavigate();var nuevoClienteSchema=Yup.object().shape({nombre:Yup.string().min(3,\"El nombre es muy corto\").max(30,\"El nombre es muy largo\").required('El nombre del cliente es obligatorio'),empresa:Yup.string().required('El nombre de la empresa es obligatorio'),email:Yup.string().email(\"E-mail no valido\").required('El e-mail es obligatorio'),telefono:Yup.number().positive(\"El numero no es valido\").integer(\"El numero no es valido\").typeError(\"El numero de telefono no es valido\")});var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var url,respuesta,resultado,_url,_respuesta,_resultado;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(!cliente.id){_context.next=13;break;}// editando registro\nurl=\"http://localhost:4000/clientes/\".concat(cliente.id);_context.next=5;return fetch(url,{method:\"PUT\",body:JSON.stringify(values),headers:{\"Content-Type\":\"application/json\"}});case 5:respuesta=_context.sent;_context.next=8;return respuesta.json();case 8:resultado=_context.sent;console.log(resultado);navigate('/clientes');_context.next=22;break;case 13:// creando registro\n_url=\"http://localhost:4000/clientes\";_context.next=16;return fetch(_url,{method:\"POST\",body:JSON.stringify(values),headers:{\"Content-Type\":\"application/json\"}});case 16:_respuesta=_context.sent;_context.next=19;return _respuesta.json();case 19:_resultado=_context.sent;console.log(_resultado);navigate('/clientes');case 22:_context.next=27;break;case 24:_context.prev=24;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 27:case\"end\":return _context.stop();}}},_callee,null,[[0,24]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();return cargando?'Cargando...':/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"conteneiner-form\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\" \",cliente!==null&&cliente!==void 0&&cliente.nombre?'EDITAR CLIENTE':'AGREGAR CLIENTE']}),/*#__PURE__*/_jsx(Formik,{initialValues:{nombre:(_cliente$nombre=cliente===null||cliente===void 0?void 0:cliente.nombre)!==null&&_cliente$nombre!==void 0?_cliente$nombre:'',empresa:(_cliente$empresa=cliente===null||cliente===void 0?void 0:cliente.empresa)!==null&&_cliente$empresa!==void 0?_cliente$empresa:'',email:(_cliente$email=cliente===null||cliente===void 0?void 0:cliente.email)!==null&&_cliente$email!==void 0?_cliente$email:'',telefono:(_cliente$telefono=cliente===null||cliente===void 0?void 0:cliente.telefono)!==null&&_cliente$telefono!==void 0?_cliente$telefono:'',notas:(_cliente$notas=cliente===null||cliente===void 0?void 0:cliente.notas)!==null&&_cliente$notas!==void 0?_cliente$notas:''},enableReinitialize:true,onSubmit:/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values,_ref3){var resetForm;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:resetForm=_ref3.resetForm;_context2.next=3;return handleSubmit(values);case 3:resetForm();case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2,_x3){return _ref4.apply(this,arguments);};}(),validationSchema:nuevoClienteSchema,children:function children(_ref5){var errors=_ref5.errors,touched=_ref5.touched;return/*#__PURE__*/_jsxs(Form,{className:\"form-principal\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"label-form\",htmlFor:\"nombre\",children:\"Nombre\"}),/*#__PURE__*/_jsx(Field,{className:\"field-form\",id:\"nombre\",placeholder:\"Nombre del cliente\",type:\"text\",name:\"nombre\"}),errors.nombre&&touched.nombre?/*#__PURE__*/_jsxs(Alerta,{children:[\" \",errors.nombre,\" \"]}):null]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"label-form\",htmlFor:\"empresa\",children:\"Empresa\"}),/*#__PURE__*/_jsx(Field,{className:\"field-form\",id:\"empresa\",placeholder:\"Empresa del cliente\",type:\"text\",name:\"empresa\"}),errors.empresa&&touched.empresa?/*#__PURE__*/_jsxs(Alerta,{children:[\" \",errors.empresa,\" \"]}):null]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"label-form\",htmlFor:\"email\",children:\"E-mail\"}),/*#__PURE__*/_jsx(Field,{className:\"field-form\",id:\"email\",placeholder:\"Email del cliente\",type:\"email\",name:\"email\"}),errors.email&&touched.email?/*#__PURE__*/_jsxs(Alerta,{children:[\" \",errors.email,\" \"]}):null]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"label-form\",htmlFor:\"telefono\",children:\"Telefono\"}),/*#__PURE__*/_jsx(Field,{className:\"field-form\",id:\"telefono\",placeholder:\"Telefono del cliente\",type:\"tel\",name:\"telefono\"}),errors.telefono&&touched.telefono?/*#__PURE__*/_jsxs(Alerta,{children:[\" \",errors.telefono,\" \"]}):null]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"label-form\",htmlFor:\"notas\",children:\"Notas\"}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",className:\"field-form textarea-form\",id:\"notas\",placeholder:\"Notas del cliente\",type:\"text\",name:\"notas\"}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",className:\"submit-form btn btn-primary w-100\",value:cliente!==null&&cliente!==void 0&&cliente.nombre?'Editar cliente':'Agregar cliente'})]})]});}})]})});};Formulario.defaultProps={cliente:{}};export default Formulario;","map":{"version":3,"sources":["C:/Users/Juan/Desktop/Administraor-de-clientes/src/components/Formulario.jsx"],"names":["React","Formik","Form","Field","useNavigate","Yup","Alerta","Formulario","cliente","cargando","navigate","nuevoClienteSchema","object","shape","nombre","string","min","max","required","empresa","email","telefono","number","positive","integer","typeError","handleSubmit","values","id","url","fetch","method","body","JSON","stringify","headers","respuesta","json","resultado","console","log","notas","resetForm","errors","touched","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Formik , Form , Field } from 'formik'\r\nimport { useNavigate} from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport Alerta from './Alerta'\r\n\r\nconst Formulario = ({cliente , cargando}) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const nuevoClienteSchema = Yup.object().shape({\r\n        nombre: Yup.string()\r\n                   .min(3, \"El nombre es muy corto\")\r\n                   .max(30, \"El nombre es muy largo\")\r\n                   .required('El nombre del cliente es obligatorio'),\r\n\r\n        empresa: Yup.string()\r\n                    .required('El nombre de la empresa es obligatorio'),\r\n\r\n        email: Yup.string()\r\n                    .email(\"E-mail no valido\")\r\n                    .required('El e-mail es obligatorio'),\r\n\r\n        telefono: Yup.number()\r\n                     .positive(\"El numero no es valido\")\r\n                     .integer(\"El numero no es valido\")\r\n                     .typeError(\"El numero de telefono no es valido\")\r\n       \r\n    })\r\n\r\n\r\n\r\n    const handleSubmit = async (values) => {\r\n        try {\r\n           if(cliente.id) {\r\n              // editando registro\r\n              const url = `http://localhost:4000/clientes/${cliente.id}`\r\n            const  respuesta = await fetch(url, {\r\n\r\n                    method: \"PUT\",\r\n                    body: JSON.stringify(values),\r\n                    headers: {\r\n                          \"Content-Type\" : \"application/json\"\r\n                     }\r\n                 })\r\n                    const  resultado = await respuesta.json()\r\n                    console.log(resultado);\r\n                    navigate('/clientes')\r\n           \r\n           } else {\r\n              // creando registro\r\n            const url = \"http://localhost:4000/clientes\"\r\n            const  respuesta = await fetch(url, {\r\n\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(values),\r\n                    headers: {\r\n                          \"Content-Type\" : \"application/json\"\r\n                     }\r\n                 })\r\n                    const  resultado = await respuesta.json()\r\n                    console.log(resultado);\r\n                    navigate('/clientes')\r\n           }\r\n                    \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    } \r\n  return (\r\n\r\n    cargando ? 'Cargando...' : ( \r\n    <>\r\n        <div className='conteneiner-form'>\r\n            <h1> {cliente?.nombre ? 'EDITAR CLIENTE' : 'AGREGAR CLIENTE' }</h1>\r\n\r\n            {/* en formik usa un useState de su api y se declara todo adentro de la etiqueta formik */}\r\n            <Formik\r\n                initialValues={{\r\n                    nombre: cliente?.nombre ?? '',\r\n                    empresa: cliente?.empresa ?? '',\r\n                    email: cliente?.email ?? '',\r\n                    telefono: cliente?.telefono ?? '',\r\n                    notas: cliente?.notas ?? ''\r\n\r\n                }}\r\n\r\n                enableReinitialize={true}\r\n\r\n                onSubmit={ async (values , {resetForm}) => {\r\n                  await  handleSubmit(values)\r\n\r\n                  resetForm()\r\n\r\n                } }\r\n\r\n                validationSchema = {nuevoClienteSchema}\r\n            \r\n            > \r\n\r\n           {  ({errors , touched}) => { \r\n\r\n                return  ( \r\n\r\n                <Form className='form-principal'>\r\n                    <div>\r\n                        <label\r\n                         className='label-form'\r\n                         htmlFor=\"nombre\"\r\n                         >\r\n                         Nombre\r\n                         </label>\r\n\r\n                        <Field\r\n                        className=\"field-form\"\r\n                        id=\"nombre\"\r\n                        placeholder=\"Nombre del cliente\"\r\n                        type=\"text\"\r\n                        name=\"nombre\"\r\n                        />\r\n\r\n                        { errors.nombre && touched.nombre ? \r\n                             <Alerta> {errors.nombre} </Alerta>\r\n                             : null\r\n                        }\r\n                       \r\n                    </div>\r\n\r\n                    <div>\r\n                        <label\r\n                         className='label-form'\r\n                         htmlFor=\"empresa\"\r\n                         >\r\n                         Empresa\r\n                         </label>\r\n                         \r\n                        <Field\r\n                        className=\"field-form\"\r\n                        id=\"empresa\"\r\n                        placeholder=\"Empresa del cliente\"\r\n                        type=\"text\"\r\n                        name=\"empresa\"\r\n                        />\r\n\r\n                            { errors.empresa && touched.empresa ? \r\n                             <Alerta> {errors.empresa} </Alerta>\r\n                             : null\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                    <div>\r\n                        <label\r\n                         className='label-form'\r\n                         htmlFor=\"email\"\r\n                         >\r\n                         E-mail\r\n                         </label>\r\n                         \r\n                        <Field\r\n                        className=\"field-form\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email del cliente\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        />\r\n\r\n                            { errors.email && touched.email ? \r\n                             <Alerta> {errors.email} </Alerta>\r\n                             : null\r\n                            }\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label\r\n                         className='label-form'\r\n                         htmlFor=\"telefono\"\r\n                         >\r\n                        Telefono\r\n                         </label>\r\n                         \r\n                        <Field\r\n                        className=\"field-form\"\r\n                        id=\"telefono\"\r\n                        placeholder=\"Telefono del cliente\"\r\n                        type=\"tel\"\r\n                        name=\"telefono\"\r\n                        />\r\n\r\n                           { errors.telefono && touched.telefono ? \r\n                             <Alerta> {errors.telefono} </Alerta>\r\n                             : null\r\n                            }\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label\r\n                         className='label-form'\r\n                         htmlFor=\"notas\"\r\n                         >\r\n                        Notas\r\n                         </label>\r\n                         \r\n                        <Field\r\n                        as=\"textarea\"\r\n                        className=\"field-form textarea-form\"\r\n                        id=\"notas\"\r\n                        placeholder=\"Notas del cliente\"\r\n                        type=\"text\"\r\n                        name=\"notas\"\r\n                        />\r\n\r\n                        <input\r\n                         type=\"submit\"\r\n                         className='submit-form btn btn-primary w-100'\r\n                         value={ cliente?.nombre ? 'Editar cliente' : 'Agregar cliente'}\r\n                          />\r\n\r\n\r\n                    </div>\r\n                   \r\n                </Form>\r\n\r\n             )} } \r\n\r\n            </Formik>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        \r\n    </>\r\n    )\r\n  )\r\n}\r\n\r\nFormulario.defaultProps = {\r\n    cliente: {}\r\n}\r\n\r\nexport default Formulario"]},"metadata":{},"sourceType":"module"}