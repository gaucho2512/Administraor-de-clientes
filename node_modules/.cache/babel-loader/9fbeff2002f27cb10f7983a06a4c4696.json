{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Documents\\\\REACT\\\\Curso React Juan de la Torre Valdez\\\\administrador-de-clientes\\\\src\\\\components\\\\Formulario.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport Alerta from './Alerta';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Formulario = _ref => {\n  _s();\n\n  var _cliente$nombre, _cliente$empresa, _cliente$email, _cliente$telefono, _cliente$notas;\n\n  let {\n    cliente,\n    cargando\n  } = _ref;\n  const navigate = useNavigate();\n  const nuevoClienteSchema = Yup.object().shape({\n    nombre: Yup.string().min(3, \"El nombre es muy corto\").max(30, \"El nombre es muy largo\").required('El nombre del cliente es obligatorio'),\n    empresa: Yup.string().required('El nombre de la empresa es obligatorio'),\n    email: Yup.string().email(\"E-mail no valido\").required('El e-mail es obligatorio'),\n    telefono: Yup.number().positive(\"El numero no es valido\").integer(\"El numero no es valido\").typeError(\"El numero de telefono no es valido\")\n  });\n\n  const handleSubmit = async values => {\n    try {\n      if (cliente.id) {\n        // editando registro\n        const url = `http://localhost:4000/clientes/${cliente.id}`;\n        const respuesta = await fetch(url, {\n          method: \"PUT\",\n          body: JSON.stringify(values),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const resultado = await respuesta.json();\n        console.log(resultado);\n        navigate('/clientes');\n      } else {\n        // creando registro\n        const url = \"http://localhost:4000/clientes\";\n        const respuesta = await fetch(url, {\n          method: \"POST\",\n          body: JSON.stringify(values),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const resultado = await respuesta.json();\n        console.log(resultado);\n        navigate('/clientes');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return cargando ? 'Cargando...' : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conteneiner-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", cliente !== null && cliente !== void 0 && cliente.nombre ? 'EDITAR CLIENTE' : 'AGREGAR CLIENTE']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          nombre: (_cliente$nombre = cliente === null || cliente === void 0 ? void 0 : cliente.nombre) !== null && _cliente$nombre !== void 0 ? _cliente$nombre : '',\n          empresa: (_cliente$empresa = cliente === null || cliente === void 0 ? void 0 : cliente.empresa) !== null && _cliente$empresa !== void 0 ? _cliente$empresa : '',\n          email: (_cliente$email = cliente === null || cliente === void 0 ? void 0 : cliente.email) !== null && _cliente$email !== void 0 ? _cliente$email : '',\n          telefono: (_cliente$telefono = cliente === null || cliente === void 0 ? void 0 : cliente.telefono) !== null && _cliente$telefono !== void 0 ? _cliente$telefono : '',\n          notas: (_cliente$notas = cliente === null || cliente === void 0 ? void 0 : cliente.notas) !== null && _cliente$notas !== void 0 ? _cliente$notas : ''\n        },\n        enableReinitialize: true,\n        onSubmit: async (values, _ref2) => {\n          let {\n            resetForm\n          } = _ref2;\n          await handleSubmit(values);\n          resetForm();\n        },\n        validationSchema: nuevoClienteSchema,\n        children: _ref3 => {\n          let {\n            errors,\n            touched\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            className: \"form-principal\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label-form\",\n                htmlFor: \"nombre\",\n                children: \"Nombre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"field-form\",\n                id: \"nombre\",\n                placeholder: \"Nombre del cliente\",\n                type: \"text\",\n                name: \"nombre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 25\n              }, this), errors.nombre && touched.nombre ? /*#__PURE__*/_jsxDEV(Alerta, {\n                children: [\" \", errors.nombre, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 30\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label-form\",\n                htmlFor: \"empresa\",\n                children: \"Empresa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"field-form\",\n                id: \"empresa\",\n                placeholder: \"Empresa del cliente\",\n                type: \"text\",\n                name: \"empresa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 25\n              }, this), errors.empresa && touched.empresa ? /*#__PURE__*/_jsxDEV(Alerta, {\n                children: [\" \", errors.empresa, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 30\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label-form\",\n                htmlFor: \"email\",\n                children: \"E-mail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"field-form\",\n                id: \"email\",\n                placeholder: \"Email del cliente\",\n                type: \"email\",\n                name: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 25\n              }, this), errors.email && touched.email ? /*#__PURE__*/_jsxDEV(Alerta, {\n                children: [\" \", errors.email, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 30\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label-form\",\n                htmlFor: \"telefono\",\n                children: \"Telefono\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"field-form\",\n                id: \"telefono\",\n                placeholder: \"Telefono del cliente\",\n                type: \"tel\",\n                name: \"telefono\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 25\n              }, this), errors.telefono && touched.telefono ? /*#__PURE__*/_jsxDEV(Alerta, {\n                children: [\" \", errors.telefono, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 30\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label-form\",\n                htmlFor: \"notas\",\n                children: \"Notas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: \"textarea\",\n                className: \"field-form textarea-form\",\n                id: \"notas\",\n                placeholder: \"Notas del cliente\",\n                type: \"text\",\n                name: \"notas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"submit-form btn btn-primary w-100\",\n                value: cliente !== null && cliente !== void 0 && cliente.nombre ? 'Editar cliente' : 'Agregar cliente'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Formulario, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Formulario;\nFormulario.defaultProps = {\n  cliente: {}\n};\nexport default Formulario;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"sources":["C:/Users/Juan/Documents/REACT/Curso React Juan de la Torre Valdez/administrador-de-clientes/src/components/Formulario.jsx"],"names":["React","Formik","Form","Field","useNavigate","Yup","Alerta","Formulario","cliente","cargando","navigate","nuevoClienteSchema","object","shape","nombre","string","min","max","required","empresa","email","telefono","number","positive","integer","typeError","handleSubmit","values","id","url","respuesta","fetch","method","body","JSON","stringify","headers","resultado","json","console","log","error","notas","resetForm","errors","touched","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Formik , Form , Field } from 'formik'\r\nimport { useNavigate} from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport Alerta from './Alerta'\r\n\r\nconst Formulario = ({cliente , cargando}) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const nuevoClienteSchema = Yup.object().shape({\r\n        nombre: Yup.string()\r\n                   .min(3, \"El nombre es muy corto\")\r\n                   .max(30, \"El nombre es muy largo\")\r\n                   .required('El nombre del cliente es obligatorio'),\r\n\r\n        empresa: Yup.string()\r\n                    .required('El nombre de la empresa es obligatorio'),\r\n\r\n        email: Yup.string()\r\n                    .email(\"E-mail no valido\")\r\n                    .required('El e-mail es obligatorio'),\r\n\r\n        telefono: Yup.number()\r\n                     .positive(\"El numero no es valido\")\r\n                     .integer(\"El numero no es valido\")\r\n                     .typeError(\"El numero de telefono no es valido\")\r\n       \r\n    })\r\n\r\n\r\n\r\n    const handleSubmit = async (values) => {\r\n        try {\r\n           if(cliente.id) {\r\n              // editando registro\r\n              const url = `http://localhost:4000/clientes/${cliente.id}`\r\n            const  respuesta = await fetch(url, {\r\n\r\n                    method: \"PUT\",\r\n                    body: JSON.stringify(values),\r\n                    headers: {\r\n                          \"Content-Type\" : \"application/json\"\r\n                     }\r\n                 })\r\n                    const  resultado = await respuesta.json()\r\n                    console.log(resultado);\r\n                    navigate('/clientes')\r\n           \r\n           } else {\r\n              // creando registro\r\n            const url = \"http://localhost:4000/clientes\"\r\n            const  respuesta = await fetch(url, {\r\n\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(values),\r\n                    headers: {\r\n                          \"Content-Type\" : \"application/json\"\r\n                     }\r\n                 })\r\n                    const  resultado = await respuesta.json()\r\n                    console.log(resultado);\r\n                    navigate('/clientes')\r\n           }\r\n                    \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    } \r\n  return (\r\n\r\n    cargando ? 'Cargando...' : ( \r\n    <>\r\n        <div className='conteneiner-form'>\r\n            <h1> {cliente?.nombre ? 'EDITAR CLIENTE' : 'AGREGAR CLIENTE' }</h1>\r\n\r\n            {/* en formik usa un useState de su api y se declara todo adentro de la etiqueta formik */}\r\n            <Formik\r\n                initialValues={{\r\n                    nombre: cliente?.nombre ?? '',\r\n                    empresa: cliente?.empresa ?? '',\r\n                    email: cliente?.email ?? '',\r\n                    telefono: cliente?.telefono ?? '',\r\n                    notas: cliente?.notas ?? ''\r\n\r\n                }}\r\n\r\n                enableReinitialize={true}\r\n\r\n                onSubmit={ async (values , {resetForm}) => {\r\n                  await  handleSubmit(values)\r\n\r\n                  resetForm()\r\n\r\n                } }\r\n\r\n                validationSchema = {nuevoClienteSchema}\r\n            \r\n            > \r\n\r\n           {  ({errors , touched}) => { \r\n\r\n                return  ( \r\n\r\n                <Form className='form-principal'>\r\n                    <div>\r\n                        <label\r\n                         className='label-form'\r\n                         htmlFor=\"nombre\"\r\n                         >\r\n                         Nombre\r\n                         </label>\r\n\r\n                        <Field\r\n                        className=\"field-form\"\r\n                        id=\"nombre\"\r\n                        placeholder=\"Nombre del cliente\"\r\n                        type=\"text\"\r\n                        name=\"nombre\"\r\n                        />\r\n\r\n                        { errors.nombre && touched.nombre ? \r\n                             <Alerta> {errors.nombre} </Alerta>\r\n                             : null\r\n                        }\r\n                       \r\n                    </div>\r\n\r\n                    <div>\r\n                        <label\r\n                         className='label-form'\r\n                         htmlFor=\"empresa\"\r\n                         >\r\n                         Empresa\r\n                         </label>\r\n                         \r\n                        <Field\r\n                        className=\"field-form\"\r\n                        id=\"empresa\"\r\n                        placeholder=\"Empresa del cliente\"\r\n                        type=\"text\"\r\n                        name=\"empresa\"\r\n                        />\r\n\r\n                            { errors.empresa && touched.empresa ? \r\n                             <Alerta> {errors.empresa} </Alerta>\r\n                             : null\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                    <div>\r\n                        <label\r\n                         className='label-form'\r\n                         htmlFor=\"email\"\r\n                         >\r\n                         E-mail\r\n                         </label>\r\n                         \r\n                        <Field\r\n                        className=\"field-form\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email del cliente\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        />\r\n\r\n                            { errors.email && touched.email ? \r\n                             <Alerta> {errors.email} </Alerta>\r\n                             : null\r\n                            }\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label\r\n                         className='label-form'\r\n                         htmlFor=\"telefono\"\r\n                         >\r\n                        Telefono\r\n                         </label>\r\n                         \r\n                        <Field\r\n                        className=\"field-form\"\r\n                        id=\"telefono\"\r\n                        placeholder=\"Telefono del cliente\"\r\n                        type=\"tel\"\r\n                        name=\"telefono\"\r\n                        />\r\n\r\n                           { errors.telefono && touched.telefono ? \r\n                             <Alerta> {errors.telefono} </Alerta>\r\n                             : null\r\n                            }\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label\r\n                         className='label-form'\r\n                         htmlFor=\"notas\"\r\n                         >\r\n                        Notas\r\n                         </label>\r\n                         \r\n                        <Field\r\n                        as=\"textarea\"\r\n                        className=\"field-form textarea-form\"\r\n                        id=\"notas\"\r\n                        placeholder=\"Notas del cliente\"\r\n                        type=\"text\"\r\n                        name=\"notas\"\r\n                        />\r\n\r\n                        <input\r\n                         type=\"submit\"\r\n                         className='submit-form btn btn-primary w-100'\r\n                         value={ cliente?.nombre ? 'Editar cliente' : 'Agregar cliente'}\r\n                          />\r\n\r\n\r\n                    </div>\r\n                   \r\n                </Form>\r\n\r\n             )} } \r\n\r\n            </Formik>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        \r\n    </>\r\n    )\r\n  )\r\n}\r\n\r\nFormulario.defaultProps = {\r\n    cliente: {}\r\n}\r\n\r\nexport default Formulario"]},"metadata":{},"sourceType":"module"}